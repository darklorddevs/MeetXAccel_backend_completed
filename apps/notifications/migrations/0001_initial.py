# Generated by Django 5.2.6 on 2025-09-07 08:39

import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("events", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("booking_confirmations_email", models.BooleanField(default=True)),
                ("booking_reminders_email", models.BooleanField(default=True)),
                ("booking_cancellations_email", models.BooleanField(default=True)),
                ("daily_agenda_email", models.BooleanField(default=True)),
                ("booking_confirmations_sms", models.BooleanField(default=False)),
                ("booking_reminders_sms", models.BooleanField(default=False)),
                ("booking_cancellations_sms", models.BooleanField(default=False)),
                (
                    "reminder_minutes_before",
                    models.IntegerField(
                        default=60, help_text="Minutes before meeting to send reminder"
                    ),
                ),
                (
                    "daily_agenda_time",
                    models.TimeField(
                        default="08:00", help_text="Time to send daily agenda"
                    ),
                ),
                (
                    "dnd_enabled",
                    models.BooleanField(
                        default=False, help_text="Enable do-not-disturb hours"
                    ),
                ),
                (
                    "dnd_start_time",
                    models.TimeField(
                        default=datetime.time(22, 0),
                        help_text="Start of do-not-disturb period (local time)",
                    ),
                ),
                (
                    "dnd_end_time",
                    models.TimeField(
                        default=datetime.time(7, 0),
                        help_text="End of do-not-disturb period (local time)",
                    ),
                ),
                (
                    "exclude_weekends_reminders",
                    models.BooleanField(
                        default=False, help_text="Don't send reminders on weekends"
                    ),
                ),
                (
                    "exclude_weekends_agenda",
                    models.BooleanField(
                        default=True, help_text="Don't send daily agenda on weekends"
                    ),
                ),
                (
                    "preferred_notification_method",
                    models.CharField(
                        choices=[
                            ("email", "Email Only"),
                            ("sms", "SMS Only"),
                            ("both", "Both Email and SMS"),
                        ],
                        default="email",
                        max_length=10,
                    ),
                ),
                (
                    "max_reminders_per_day",
                    models.IntegerField(
                        default=10,
                        help_text="Maximum reminders to send per day",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Notification Preference",
                "verbose_name_plural": "Notification Preferences",
                "db_table": "notification_preferences",
            },
        ),
        migrations.CreateModel(
            name="NotificationSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "schedule_type",
                    models.CharField(
                        choices=[
                            ("reminder", "Reminder"),
                            ("follow_up", "Follow-up"),
                            ("daily_agenda", "Daily Agenda"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[("email", "Email"), ("sms", "SMS")], max_length=10
                    ),
                ),
                ("scheduled_for", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("sent", "Sent"),
                            ("cancelled", "Cancelled"),
                            ("failed", "Failed"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("recipient_email", models.EmailField(blank=True, max_length=254)),
                ("recipient_phone", models.CharField(blank=True, max_length=20)),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("message", models.TextField()),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Notification Schedule",
                "verbose_name_plural": "Notification Schedules",
                "db_table": "notification_schedules",
                "ordering": ["scheduled_for"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("booking_confirmation", "Booking Confirmation"),
                            ("booking_reminder", "Booking Reminder"),
                            ("booking_cancellation", "Booking Cancellation"),
                            ("booking_rescheduled", "Booking Rescheduled"),
                            ("follow_up", "Follow-up"),
                            ("custom", "Custom"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[("email", "Email"), ("sms", "SMS")], max_length=10
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("message", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                ("is_default", models.BooleanField(default=False)),
                (
                    "required_placeholders",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of required placeholders for this template",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Notification Template",
                "verbose_name_plural": "Notification Templates",
                "db_table": "notification_templates",
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[("email", "Email"), ("sms", "SMS")], max_length=10
                    ),
                ),
                ("recipient_email", models.EmailField(blank=True, max_length=254)),
                ("recipient_phone", models.CharField(blank=True, max_length=20)),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("bounced", "Bounced"),
                            ("delivered", "Delivered"),
                            ("opened", "Opened"),
                            ("clicked", "Clicked"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("max_retries", models.IntegerField(default=3)),
                (
                    "external_id",
                    models.CharField(
                        blank=True,
                        help_text="ID from email/SMS service",
                        max_length=200,
                    ),
                ),
                (
                    "delivery_status",
                    models.CharField(
                        choices=[
                            ("unknown", "Unknown"),
                            ("queued", "Queued"),
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("bounced", "Bounced"),
                            ("undelivered", "Undelivered"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                ("provider_response", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="events.booking",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Log",
                "verbose_name_plural": "Notification Logs",
                "db_table": "notification_logs",
                "ordering": ["-created_at"],
            },
        ),
    ]
